CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
MESSAGE(STATUS "CMake version: ${CMAKE_VERSION}")

PROJECT(pyhttp)

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF()
MESSAGE(STATUS "Build Type ${CMAKE_BUILD_TYPE}")


SET(PY_CONFIG /application/Python-3.7.8/bin/python3-config)

EXECUTE_PROCESS(
    COMMAND ${PY_CONFIG} --includes
    COMMAND awk "{print $2}"
    COMMAND cut -c 3-
    OUTPUT_VARIABLE PY_INC
    OUTPUT_STRIP_TRAILING_WHITESPACE
)
EXECUTE_PROCESS(
    COMMAND ${PY_CONFIG} --libs
    COMMAND awk "{print $1}"
    COMMAND cut -c 3-
    OUTPUT_VARIABLE PY_LIB_NAME
    OUTPUT_STRIP_TRAILING_WHITESPACE
)
EXECUTE_PROCESS(
    COMMAND ${PY_CONFIG} --prefix
    OUTPUT_VARIABLE PY_LIB_DIR
    OUTPUT_STRIP_TRAILING_WHITESPACE
)

# include
MESSAGE(STATUS "Python Include Path ${PY_INC}")
INCLUDE_DIRECTORIES(${PY_INC})

# libs
MESSAGE(STATUS "Python Library ${PY_LIB_DIR}/lib")
MESSAGE(STATUS "Python Libs ${PY_LIB_NAME}")
FIND_LIBRARY(PY_LIB
    NAMES ${PY_LIB_NAME}
    PATHS "${PY_LIB_DIR}/lib"
)
LINK_LIBRARIES(${PY_LIB})


INCLUDE_DIRECTORIES(./src)
INCLUDE_DIRECTORIES(../src)

SET(SRC
    src/entry.c
    ../src/core/log.c
    ../src/server/server.c
)

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SRC})
